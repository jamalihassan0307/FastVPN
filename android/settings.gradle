pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        maven { url 'https://storage.googleapis.com/download.flutter.io' }
        maven { url 'https://jitpack.io' }
    }
}

rootProject.name = "android"
include ':app'
include ':vpnLib'

def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()
def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.resolve(path).resolve('android').toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}

def flutterSdkPath = {
    def properties = new Properties()
    def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withReader("UTF-8") { reader -> properties.load(reader) }
    }

    def flutterSdk = properties.getProperty("flutter.sdk")
    assert flutterSdk != null, "flutter.sdk not set in local.properties"
    return flutterSdk
}()

apply from: "${flutterSdkPath}/packages/flutter_tools/gradle/app_plugin_loader.gradle"
